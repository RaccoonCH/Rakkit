# DO NOT EDIT THIS FILE, IT'S GENERATED AT EACH APP STARTUP #

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

interface ExampleInterfaceType2 {
  hello4: DateTime!
}

type ExampleObjectType {
  hello: String
  test: MyInterface!
  aa: String!
}

"""ObjectType named from required ExampleInputType"""
type ExampleObjectType0RequiredExampleInputType {
  hello0: [String]!
}

type ExampleObjectType2 implements GraphQLInterfaceTypeExampleInterfaceType & ExampleInterfaceType2 {
  date: DateTime!
  hello2: ExampleObjectType
  hello3: String!
  ms: Test!
  hello4: DateTime!
  enumz: testEnum!
  resolveMe: String!
}

input GenericResponseGraphQLInputObjectTypeExampleInputTypeGraphQLInputObjectTypeExampleInputType2 {
  """items"""
  items: [GraphQLInputObjectTypeExampleInputType] = []
  items2: GraphQLInputObjectTypeExampleInputType2!
  hello3: String
  hello4: String!
  hello6: GraphQLInputObjectTypeExampleInputType
}

input GraphQLInputObjectTypeExampleInputType {
  hello3: String!
  enumz: testEnum!
  resolveMe: String
}

input GraphQLInputObjectTypeExampleInputType2 {
  hello3: String!
  hello12: String
}

input GraphQLInputObjectTypePO0 {
  po: String!
}

input GraphQLInputObjectTypePO1 {
  po: String!
  po0: GraphQLInputObjectTypePO0!
}

input GraphQLInputObjectTypePO2 {
  str: String!
  po: String!
  po02: GraphQLInputObjectTypePO0!
  po0: GraphQLInputObjectTypePO0!
}

interface GraphQLInterfaceTypeExampleInterfaceType {
  hello3: String!
  ms: Test!
}

interface GraphQLInterfaceTypePO0 {
  po: String!
}

interface GraphQLInterfaceTypePO1 {
  po: String!
  po0: GraphQLObjectTypePO0!
}

"""My example InputType"""
type GraphQLObjectTypeExampleInputType {
  hello3: String!
  enumz: testEnum!
  resolveMe: String
}

type GraphQLObjectTypeExampleInputType2RequiredExampleInputType {
  hello3: String!
  hello12: String
}

type GraphQLObjectTypeExampleInterfaceType {
  hello3: String!
  ms: Test!
}

type GraphQLObjectTypePO0 {
  po: String!
}

type GraphQLObjectTypePO1 {
  po: String!
  po0: GraphQLObjectTypePO0!
}

type GraphQLObjectTypePO2 implements GraphQLInterfaceTypePO1 {
  str: String!
  po: String!
  po02: GraphQLObjectTypePO0!
  po0: GraphQLObjectTypePO0!
}

type Mutation {
  helloWorldMutation: MyInterface!
}

"""An enum type generated from a class"""
enum MyEnumClassType {
  yop
}

interface MyInterface {
  myInterfaceField: String!
}

type MyInterfaceObj1 implements MyInterface {
  myInterfaceField: String!
  yo: String!
}

type MyInterfaceObj2 implements MyInterface {
  myInterfaceField: String!
}

type Query {
  a(
    param0: GenericResponseGraphQLInputObjectTypeExampleInputTypeGraphQLInputObjectTypeExampleInputType2
    hello3: String!
    enumz: testEnum!
    resolveMe: String!

    """yo"""
    aa: Float = 123
  ): test!
  getAll: [ExampleObjectType]!
  helloWorld: [[test]]!
  b: String!
}

type RequiredExampleInputType {
  hello3: String!
  enumz: testEnum!
  resolveMe: String!
}

type Response {
  hello3: String
  hello4: String!
  hello6: GraphQLObjectTypeExampleInputType
}

type Subscription {
  sub(
    """yop"""
    topic: [[[String]]] = []
  ): Boolean!
}

union test = GraphQLObjectTypeExampleInputType | GraphQLObjectTypeExampleInputType2RequiredExampleInputType

interface Test {
  hello3: String!
  enumz: testEnum!
  resolveMe: String
}

enum testEnum {
  a
  b
}

type ZZZ {
  hello0: [[String]]!
}
