(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{209:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"use-external-koa-libraries-for-your-application"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-external-koa-libraries-for-your-application","aria-hidden":"true"}},[t._v("#")]),t._v(" Use external Koa libraries for your application")]),t._v(" "),s("p",[t._v("Rakkit was created to be modular, that's why all libraries created for Koa are compatible with your application, so it's up to you to download them and include them in your application."),s("br"),t._v("\nFor most modules you can pass them as a parameter when starting your application ("),s("code",[t._v("globalAppMiddlewares")]),t._v("),\nRemember that for modules requesting the application instance, you can access it via "),s("code",[t._v("Rakkit.Instance.KoaApp")]),t._v(" for "),s("strong",[t._v("the application instance")]),t._v(", via "),s("code",[t._v("MetadataStorage.Instance.Rest.MainRouter")]),t._v(" for "),s("strong",[t._v("the main router instance")]),t._v(" (of koa-router) or via "),s("code",[t._v("MetadataStorage.Instance.Rest.RestRouter")]),t._v(" for the "),s("strong",[t._v("rest router instance")]),t._v("."),s("br"),t._v("\nYou will then have to pass them as parameters as middleware, most often they will be global, which is why in the example below the middleware is declared globally on the app.")]),t._v(" "),s("p",[t._v("Here is one of use with "),s("em",[t._v("koa-bodyparser")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" BodyParser "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"koa-bodyparser"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Rakkit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rakkit"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nRakkit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  rest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    globalAppMiddleware"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BodyParser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You have to call this function because it returns a middleware")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=n.exports}}]);